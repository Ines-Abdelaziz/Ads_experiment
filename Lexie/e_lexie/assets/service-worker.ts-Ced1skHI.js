/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function y(r,t,e,n){function l(s){return s instanceof e?s:new e(function(a){a(s)})}return new(e||(e=Promise))(function(s,a){function p(o){try{d(n.next(o))}catch(h){a(h)}}function c(o){try{d(n.throw(o))}catch(h){a(h)}}function d(o){o.done?s(o.value):l(o.value).then(p,c)}d((n=n.apply(r,[])).next())})}const f=/(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/i,w="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36,gzip(gfe)",A=/<text start="([^"]*)" dur="([^"]*)">([^<]*)<\/text>/g;class u extends Error{constructor(t){super(`[YoutubeTranscript] ðŸš¨ ${t}`)}}class R extends u{constructor(){super("YouTube is receiving too many requests from this IP and now requires solving a captcha to continue")}}class x extends u{constructor(t){super(`The video is no longer available (${t})`)}}class m extends u{constructor(t){super(`Transcript is disabled on this video (${t})`)}}class g extends u{constructor(t){super(`No transcripts are available for this video (${t})`)}}class _ extends u{constructor(t,e,n){super(`No transcripts are available in ${t} this video (${n}). Available languages: ${e.join(", ")}`)}}class k{static fetchTranscript(t,e){var n;return y(this,void 0,void 0,function*(){const l=this.retrieveVideoId(t),a=yield(yield fetch(`https://www.youtube.com/watch?v=${l}`,{headers:Object.assign(Object.assign({},(e==null?void 0:e.lang)&&{"Accept-Language":e.lang}),{"User-Agent":w})})).text(),p=a.split('"captions":');if(p.length<=1)throw a.includes('class="g-recaptcha"')?new R:a.includes('"playabilityStatus":')?new m(t):new x(t);const c=(n=(()=>{try{return JSON.parse(p[1].split(',"videoDetails')[0].replace(`
`,""))}catch{return}})())===null||n===void 0?void 0:n.playerCaptionsTracklistRenderer;if(!c)throw new m(t);if(!("captionTracks"in c))throw new g(t);if(e!=null&&e.lang&&!c.captionTracks.some(i=>i.languageCode===(e==null?void 0:e.lang)))throw new _(e==null?void 0:e.lang,c.captionTracks.map(i=>i.languageCode),t);const d=(e!=null&&e.lang?c.captionTracks.find(i=>i.languageCode===(e==null?void 0:e.lang)):c.captionTracks[0]).baseUrl,o=yield fetch(d,{headers:Object.assign(Object.assign({},(e==null?void 0:e.lang)&&{"Accept-Language":e.lang}),{"User-Agent":w})});if(!o.ok)throw new g(t);return[...(yield o.text()).matchAll(A)].map(i=>{var v;return{text:i[3],duration:parseFloat(i[2]),offset:parseFloat(i[1]),lang:(v=e==null?void 0:e.lang)!==null&&v!==void 0?v:c.captionTracks[0].languageCode}})})}static retrieveVideoId(t){if(t.length===11)return t;const e=t.match(f);if(e&&e.length)return e[1];throw new u("Impossible to retrieve Youtube video ID.")}}console.log("Service Worker Loaded");let b=null;chrome.runtime.onMessage.addListener(function(r,t,e){r.action==="updateVideoId"&&(b=r.updatedVideoId)});const T=new Set;chrome.webRequest.onCompleted.addListener(function(r){if(r.url.startsWith("https://www.youtube.com/ptracking?html5=1&video_id=")){const e=new URLSearchParams(new URL(r.url).search).get("video_id");let n=[];console.log("found a network call of new video id"),e&&!T.has(e)&&e!==b&&b!==null&&(T.add(e),console.log("the video id is an AD id:",e),console.log("subtitles are : "),k.fetchTranscript(e).then(l=>{n=l.map(a=>a.text);let s=n.join(" ");s=s.replace(/&amp;#39;/g,"'"),chrome.tabs.query({active:!0,currentWindow:!0},function(a){a[0]&&a[0].id!==void 0&&chrome.tabs.sendMessage(a[0].id,{action:"newAdDetected",adVideoId:e,sub:n})})}).catch(l=>{console.error("Error fetching transcript:",l),chrome.tabs.query({active:!0,currentWindow:!0},function(s){s[0]&&s[0].id!==void 0&&chrome.tabs.sendMessage(s[0].id,{action:"newAdDetected",adVideoId:e,sub:[]})})}))}},{urls:["<all_urls>"]});
